{"version":3,"sources":["components/Pokedex.js","components/Pokemon.js","App.js","index.js"],"names":["useStyle","makeStyles","theme","pokedexContainer","padding","appbar","backgroundColor","cardMedia","margin","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","alpha","palette","common","white","marginLeft","width","spacing","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Pokedex","classes","history","useHistory","useState","undefined","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","resp","results","data","newPokeData","forEach","pokemon","index","id","name","sprite","AppBar","className","Toolbar","Typography","variant","noWrap","InputBase","onChange","e","target","value","placeholder","input","inputProps","Grid","container","Object","keys","map","pokemonId","includes","item","xs","sm","Card","onClick","push","CardMedia","image","style","CardContent","charAt","toUpperCase","slice","toFirstCaseUppercase","getPokemonCard","CircularProgress","Pokemon","useParams","setPokemon","response","catch","error","toFirstCharUppercase","species","weight","types","sprites","fullImageUrl","front_default","src","Link","href","url","typeInfo","type","generatePokemonJSX","Button","App","exact","path","render","props","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.429d7352.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Toolbar, Grid, Card, CardMedia, CardContent, Typography, InputBase } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nconst useStyle = makeStyles(theme => (\r\n    {\r\n        pokedexContainer: {\r\n            padding: \"10px 50px\"\r\n        },\r\n        appbar: {\r\n            backgroundColor: \"#f44336\"\r\n        },\r\n        cardMedia: {\r\n            margin: \"auto\"\r\n        },\r\n        root: {\r\n            flexGrow: 1\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block'\r\n            }\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            }\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        }\r\n    }))\r\n\r\nconst Pokedex = () => {\r\n    const classes = useStyle();\r\n    const history = useHistory();\r\n    const [pokemonData, setPokemonData] = useState(undefined);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const handleSearchChange = (e) => {\r\n        setFilter(e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"https://pokeapi.co/api/v2/pokemon?limit=150\")\r\n            .then(function (resp) {\r\n                const { data } = resp;\r\n                const { results } = data;\r\n                const newPokeData = {};\r\n                results.forEach((pokemon, index) => {\r\n                    newPokeData[index + 1] = {\r\n                        id: index + 1,\r\n                        name: pokemon.name,\r\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\r\n                    }\r\n                })\r\n                setPokemonData(newPokeData);\r\n            })\r\n    }, [])\r\n    const getPokemonCard = (pokemonId) => {\r\n        const { id, name, sprite } = pokemonData[pokemonId];\r\n        const toFirstCaseUppercase = name =>\r\n            name.charAt(0).toUpperCase() + name.slice(1)\r\n\r\n        return (\r\n            <Grid item xs={12} sm={4} key={pokemonId}>\r\n                <Card onClick={() => history.push(`/${pokemonId}`)}>\r\n                    <CardMedia\r\n                        className={classes.cardMedia}\r\n                        image={sprite}\r\n                        style={{ width: \"130px\", height: \"130px\" }}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography>{`${id}.${(toFirstCaseUppercase(name))}`}</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\" className={classes.appbar}>\r\n                <div className={classes.root}>\r\n                    <Toolbar>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            Pokedex\r\n                        </Typography>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                onChange={handleSearchChange}\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                        </div>\r\n                    </Toolbar>\r\n                </div>\r\n\r\n            </AppBar>\r\n            {pokemonData ? (\r\n                <Grid container spacing={2} className={classes.pokedexContainer}>\r\n                    {Object.keys(pokemonData).map(pokemonId =>\r\n                        pokemonData[pokemonId].name.includes(filter) && getPokemonCard(pokemonId)\r\n                    )}\r\n                </Grid>\r\n            ) : (<CircularProgress />)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pokedex\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst Pokemon = () => {\r\n    const history = useHistory();\r\n    const { pokemonId } = useParams();\r\n    const [pokemon, setPokemon] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n            .then(function (response) {\r\n                const { data } = response;\r\n                setPokemon(data);\r\n            })\r\n            .catch(function (error) {\r\n                setPokemon(false);\r\n            });\r\n    }, [pokemonId]);\r\n\r\n    const toFirstCharUppercase = name =>\r\n        name.charAt(0).toUpperCase() + name.slice(1)\r\n    const generatePokemonJSX = (pokemon) => {\r\n        const { name, id, species, height, weight, types, sprites } = pokemon;\r\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n        const { front_default } = sprites;\r\n        return (\r\n            <>\r\n                <Typography variant=\"h1\">\r\n                    {`${id}.`} {toFirstCharUppercase(name)}\r\n                    <img src={front_default} />\r\n                </Typography>\r\n                <img style={{ width: \"300px\", height: \"300px\" }} src={fullImageUrl} />\r\n                <Typography variant=\"h3\">Pokemon Info</Typography>\r\n                <Typography>\r\n                    {\"Species: \"}\r\n                    <Link href={species.url}>{species.name} </Link>\r\n                </Typography>\r\n                <Typography>Height: {height} </Typography>\r\n                <Typography>Weight: {weight} </Typography>\r\n                <Typography variant=\"h6\"> Types:</Typography>\r\n                {types.map((typeInfo) => {\r\n                    const { type } = typeInfo;\r\n                    const { name } = type;\r\n                    return <Typography key={name}> {`${name}`}</Typography>;\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {pokemon === undefined && <CircularProgress />}\r\n            {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n            {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n\r\n            {pokemon !== undefined && (\r\n                <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n                    back to pokedex\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pokemon;","import { Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Pokedex from './components/Pokedex';\nimport Pokemon from './components/Pokemon';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/PokeDex/\" render={(props) => <Pokedex {...props} />} />\n      <Route exact path=\"/PokeDex/:pokemonId\" render={(props) => <Pokemon {...props} />} />\n    </Switch>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}